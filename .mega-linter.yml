# Configuration file for MegaLinter
#
# See all available variables at https://megalinter.io/latest/config-file/ and in
# linters documentation

# all, none, or list of linter keys
APPLY_FIXES: all

# If you use ENABLE variable, all other languages/formats/tooling-formats will
# be disabled by default
# ENABLE:
# If you use ENABLE_LINTERS variable, all other linters will be disabled by
# default
# ENABLE_LINTERS:

DISABLE_LINTERS:
  - REPOSITORY_DEVSKIM

SHOW_ELAPSED_TIME: true

FILEIO_REPORTER: false
# Uncomment if you want MegaLinter to detect errors but not block CI to pass
# DISABLE_ERRORS: true

PYTHON_BANDIT_CONFIG_FILE: .config/linters/.bandit.yml
COPYPASTE_JSCPD_CONFIG_FILE: .config/linters/.jscpd.json
REPOSITORY_KICS_CONFIG_FILE: .config/linters/kics.yml
PYTHON_FLAKE8_CONFIG_FILE: .config/linters/.flake8
SPELL_CSPELL_CONFIG_FILE: .config/linters/.cspell.json
HTML_HTMLHINT_CONFIG_FILE: .config/linters/.htmlhintrc

SPELL_CSPELL_CLI_LINT_MODE: project
SPELL_CSPELL_ARGUMENTS: "."

CLEAR_REPORT_FOLDER: true
PARALLEL: true

REPORT_OUTPUT_FOLDER: megalinter-reports/

PRE_COMMANDS:
  - command: |-
      echo $(ls -lah .gitignore | sed 's/\s\+/ /g' | cut -d ' ' -f3,4 | sed 's/ /\:/') > /tmp/perms.txt
    cwd: "workspace"

POST_COMMANDS:
  - command: |-
      find . -user root -group root -exec chown $(cat /tmp/perms.txt) {} \;
      rm /tmp/perms.txt
    cwd: "workspace"

FLAVOR_SUGGESTIONS: false

LOG_LEVEL: INFO

IGNORE_GENERATED_FILES: true
IGNORE_GITIGNORED_FILES: true

FILTER_REGEX_EXCLUDE: (CHANGELOG.md|.config/linters/.+|\.gitignore|\.github/.*|\.git/.*|\.vscode/.*|\.megalinter.yml|LICENSE)
SPELL_LYCHEE_FILTER_REGEX_EXCLUDE: (public/index.html)
JAVASCRIPT_ES_FILTER_REGEX_EXCLUDE: (tests/.*)
JSON_V8R_FILTER_REGEX_EXCLUDE: (wiremock/.*|.devcontainer/.*|./package-lock.json)
JAVASCRIPT_STANDARD_FILTER_REGEX_EXCLUDE: (tests/.*)
